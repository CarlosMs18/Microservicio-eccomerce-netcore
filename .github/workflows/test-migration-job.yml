name: Test User Migration

on:
  push:
    branches:
      - rama-catalog-testing-production-migration
  workflow_dispatch:

env:
  DOTNET_VERSION: '7.0.x'

jobs:
  test-user-migration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Install EF Tools
        run: |
          dotnet tool install --global dotnet-ef --version 7.0.*
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
          
      - name: Test Database Connection
        run: |
          echo "Testing database connection"
          mkdir temp-test
          cd temp-test
          dotnet new console
          dotnet add package System.Data.SqlClient
          cat > Program.cs << 'EOF'
          using System;
          using System.Data.SqlClient;
          
          try 
          {
              var conn = "Server=tcp:microservices-sql-server.database.windows.net,1433;Initial Catalog=UserDB;User ID=sqladmin;Password=Admin123!;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;";
              using var connection = new SqlConnection(conn);
              connection.Open();
              Console.WriteLine("Connection successful");
              using var cmd = new SqlCommand("SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES", connection);
              var count = cmd.ExecuteScalar();
              Console.WriteLine($"Tables found: {count}");
          }
          catch(Exception ex)
          {
              Console.WriteLine($"Connection failed: {ex.Message}");
              Environment.Exit(1);
          }
          EOF
          dotnet run
          cd ..
          
      - name: Build User Service
        run: |
          echo "Building User service"
          cd src/User/User.WebAPI
          dotnet build --configuration Release
          
      - name: Check Migrations
        env:
          DB_SERVER: "microservices-sql-server.database.windows.net"
          DB_NAME: "UserDB"
          DB_USER: "sqladmin"
          DB_PASSWORD: "Admin123!"
          ASPNETCORE_ENVIRONMENT: "Production"
        run: |
          echo "Checking migrations"
          cd src/User/User.WebAPI
          echo "Database variables configured for Production environment"
          echo "Available migrations:"
          dotnet ef migrations list --configuration Release || echo "No migrations found"
          
      - name: Apply Migrations
        env:
          DB_SERVER: "microservices-sql-server.database.windows.net"
          DB_NAME: "UserDB"
          DB_USER: "sqladmin"
          DB_PASSWORD: "Admin123!"
          ASPNETCORE_ENVIRONMENT: "Production"
        run: |
          echo "Applying migrations in Production environment"
          cd src/User/User.WebAPI
          echo "Setting up database environment variables"
          dotnet clean
          dotnet build --configuration Release
          dotnet ef database update --configuration Release --verbose
          echo "Migrations applied successfully"

      - name: Seed Master Data  
        env:
          DB_SERVER: "microservices-sql-server.database.windows.net"
          DB_NAME: "UserDB"
          DB_USER: "sqladmin"
          DB_PASSWORD: "Admin123!"
          ASPNETCORE_ENVIRONMENT: "Production"
        run: |
          echo "Seeding master data for Production environment"
          cd src/User/User.WebAPI
          dotnet run --configuration Release --seed-data
          
      - name: Verify Results
        env:
          DB_SERVER: "microservices-sql-server.database.windows.net"
          DB_NAME: "UserDB"
          DB_USER: "sqladmin"
          DB_PASSWORD: "Admin123!"
          ASPNETCORE_ENVIRONMENT: "Production"
        run: |
          echo "Verifying results in Production environment"
          cd src/User/User.WebAPI
          dotnet ef migrations list --configuration Release
          echo "Test completed"