name: Simple Migration Test

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'Service to test migration'
        required: true
        default: 'user'
        type: choice
        options:
          - user
          - cart
          - catalog
  push:
    branches:
      - rama-test-migration
    paths:
      - 'src/**'
      - '.github/workflows/**'

env:
  DOTNET_VERSION: '7.0.x'

jobs:
  test-migration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Get service name
        id: get-service
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "service=${{ github.event.inputs.service }}" >> $GITHUB_OUTPUT
          else
            echo "service=user" >> $GITHUB_OUTPUT
          fi
          
      - name: Install EF Core tools
        run: |
          echo "Installing Entity Framework Core tools..."
          dotnet tool install --global dotnet-ef --version 7.0.*
          echo "EF Core tools installed successfully"
          
      - name: Build service
        run: |
          SERVICE=${{ steps.get-service.outputs.service }}
          echo "Building $SERVICE service..."
          
          if [[ "$SERVICE" == "user" ]]; then
            cd src/User/User.WebAPI
            dotnet build --configuration Release --no-restore
            echo "User service built successfully"
          fi
          
      - name: Test Azure SQL Connection
        run: |
          echo "Testing connectivity to Azure SQL Database"
          nslookup microservices-sql-server.database.windows.net || echo "DNS resolution failed"
          
      - name: Run migration
        run: |
          SERVICE=${{ steps.get-service.outputs.service }}
          echo "Running Entity Framework migrations for $SERVICE service"
          
          if [[ "$SERVICE" == "user" ]]; then
            cd src/User/User.WebAPI
            
            echo "Setting connection string..."
            export ConnectionStrings__DefaultConnection="Server=tcp:microservices-sql-server.database.windows.net,1433;Initial Catalog=microservices-db;Persist Security Info=False;User ID=sqladmin;Password=Admin123!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"
            export ASPNETCORE_ENVIRONMENT="Development"
            
            echo "Checking EF installation..."
            dotnet ef --version
            
            echo "Getting database context info..."
            dotnet ef dbcontext info --verbose || echo "Context info failed"
            
            echo "Listing available migrations..."
            dotnet ef migrations list --verbose || echo "No migrations found"
            
            echo "Applying migrations to database..."
            dotnet ef database update --verbose
            
            echo "Migration completed successfully for $SERVICE service"
          fi
          
      - name: Verify migration
        run: |
          SERVICE=${{ steps.get-service.outputs.service }}
          echo "Migration test completed for $SERVICE service"
          echo " Database migrations applied successfully"