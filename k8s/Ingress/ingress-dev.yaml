apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: microservices-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    # Timeouts ajustados para tu middleware
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
spec:
  ingressClassName: nginx-new
  rules:
  - http:
      paths:
      ### User Service (REST Público)
      - path: /api/user(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: user-service-dev
            port:
              number: 80  # Puerto del servicio (no confundir con el pod)

      ### Catalog Service (REST + gRPC interno)
      - path: /api/catalog(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: catalog-service-dev
            port:
              number: 80

      ### Health Checks (opcional)
      - path: /healthz
        pathType: Exact
        backend:
          service:
            name: catalog-service-dev  # O user-service-dev
            port:
              number: 80