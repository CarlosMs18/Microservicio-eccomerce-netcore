apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ecommerce-public-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
spec:
  ingressClassName: nginx
  rules:
  - host: localhost 
    http:
      paths:
      - path: /api/User/login
        pathType: Exact
        backend:
          service:
            name: user-service
            port:
              number: 80
      - path: /api/User/validate-token
        pathType: Exact
        backend:
          service:
            name: user-service
            port:
              number: 80
      - path: /api/User/RegisterUser
        pathType: Exact
        backend:
          service:
            name: user-service
            port:
              number: 80
      - path: /api/Category/GetAll
        pathType: Exact
        backend:
          service:
            name: catalog-service
            port:
              number: 80
      - path: /api/Product/GetAllProducts
        pathType: Exact
        backend:
          service:
            name: catalog-service
            port:
              number: 80
      - path: /api/Product/GetProductById
        pathType: Prefix
        backend:
          service:
            name: catalog-service
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ecommerce-private-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/auth-url: "http://user-service.prod.svc.cluster.local/api/User/validate-token"
    nginx.ingress.kubernetes.io/auth-method: "GET"
    nginx.ingress.kubernetes.io/auth-request-headers: "authorization"
    nginx.ingress.kubernetes.io/auth-response-headers: "x-user-id,x-user-email,x-user-roles"
    nginx.ingress.kubernetes.io/auth-timeout: "10s"
    nginx.ingress.kubernetes.io/auth-always: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
spec:
  ingressClassName: nginx
  rules:
  - host: localhost 
    http:
      paths:
      - path: /api/Category
        pathType: Exact
        backend:
          service:
            name: catalog-service
            port:
              number: 80
      - path: /api/Product/UpdateProductPrice
        pathType: Exact
        backend:
          service:
            name: catalog-service
            port:
              number: 80
      - path: /api/Product/CreateProduct
        pathType: Exact
        backend:
          service:
            name: catalog-service
            port:
              number: 80
      - path: /api/Cart/AddProductToCart
        pathType: Exact
        backend:
          service:
            name: cart-service
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: health-checks-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, OPTIONS"
spec:
  ingressClassName: nginx
  rules:
  - host: localhost
    http:
      paths:
      - path: /health/user
        pathType: Exact
        backend:
          service:
            name: user-service
            port:
              number: 80
      - path: /metrics/user
        pathType: Exact
        backend:
          service:
            name: user-service
            port:
              number: 80
      - path: /metrics/catalog
        pathType: Exact
        backend:
          service:
            name: catalog-service
            port:
              number: 80
      - path: /health/cart
        pathType: Exact
        backend:
          service:
            name: cart-service
            port:
              number: 80
      - path: /metrics/cart
        pathType: Exact
        backend:
          service:
            name: cart-service
            port:
              number: 80